# https://www.nicelydev.com/nginx/directives-http-nginx-conf
# nom de l user sous lequel est execute le processus nginx
user www-data;
# nombres de processus que le serveur doit creer pour traiter les requetes clients, mettre sur auto 
worker_processes auto;
# chemin vers le fichier qui contient le PID de Nginx, par defaut dans /run/nginx.pid. a checker dans le container
pid /run/nginx/nginx.pid;

# section event permet de definir les parametres en rapport avec les connexions (2 ordis qui communiquent ensemble ou nginx qui gere la communication entre serveur et ordi de l user)
# et les events reseau (events sur les connexions : requetes http recue, envoyees, client qui etabli une co) geres par Nginx
events {
    # nombre de co que le serveur peut gerer en memme temps, si trop haut, surcharge possible du serveur, si trop basse, connexions peuvent etre perdue, 1024 bon compromis
	worker_connections 768;
}

http
{
    # pour resoudre "client intended to send too large body error, images upload"
    client_max_body_size 10M;
    # si sendfile on, fichiers transferes du disque dur qu client sans passer par la memoire vive
    sendfile on;
    #tcp_nopush regroupes les packets, ameliore les performances en general
    tcp_nopush on;
    #  MIME, format standard permettant d identifier le type du fichier, text/html, extension .html
    # types_hash_max_size pour faire correspondance entre MIME et extension, doit etre grande pour de bonnes performances (2048 par default)
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    # si fichier sans extension
    default_type text/html;

    server {
    listen 443 ssl;
    listen [::]:443; #medium tuto
    server_name localhost; # Remplace localhost par ton domaine si nécessaire
    server_tokens off;

    root /var/www/html;
    index index.php index.html index.htm;
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/cert.key;

    # Utiliser uniquement TLSv1.3, plus secure, rapide et recent
    ssl_protocols TLSv1.3;

    # Indique au serveur SSL/TLS de se servir des algo de chiffrement de Nginx et non ceux du client (naviguateur) lors dúne co SSL/TLS
    ssl_prefer_server_ciphers off;
    # ssl_ciphers, liste des algo de chifrement, a remplir si ssl_prefer_server_ciphers on

    # Autres directives SSL importantes
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    #ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$; # added from tuto medium
        fastcgi_pass wordpress:9001;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;  # Important pour localiser le fichier
        fastcgi_param PATH_INFO $fastcgi_path_info;  # Ajout de la variable PATH_INFO
    }

    location ~ /\.ht {
        deny all;
    }
}
}

